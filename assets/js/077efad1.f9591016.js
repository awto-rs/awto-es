"use strict";(self.webpackChunkthalo_docs=self.webpackChunkthalo_docs||[]).push([[9],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,g=u["".concat(l,".").concat(m)]||u[m]||p[m]||o;return n?a.createElement(g,i(i({ref:t},d),{},{components:n})):a.createElement(g,i({ref:t},d))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2806:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:3},i="Concepts and Architecture",s={unversionedId:"concepts-and-architecture",id:"concepts-and-architecture",title:"Concepts and Architecture",description:"This section provides a detailed overview of the fundamental concepts and architectural design of Thalo, helping you understand how the different components work together to provide a robust event sourcing platform.",source:"@site/docs/concepts-and-architecture.md",sourceDirName:".",slug:"/concepts-and-architecture",permalink:"/docs/concepts-and-architecture",draft:!1,editUrl:"https://github.com/thalo-rs/thalo-docs/tree/main/packages/create-docusaurus/templates/shared/docs/concepts-and-architecture.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/docs/getting-started"},next:{title:"Writing and Deploying Aggregates",permalink:"/docs/writing-and-deploying-aggregates"}},l={},c=[{value:"Understanding Event Sourcing",id:"understanding-event-sourcing",level:2},{value:"Overview of Wasmtime and Sled",id:"overview-of-wasmtime-and-sled",level:2},{value:"Wasmtime",id:"wasmtime",level:3},{value:"Sled",id:"sled",level:3},{value:"Thalo&#39;s Architecture",id:"thalos-architecture",level:2},{value:"Core Concepts",id:"core-concepts",level:2},{value:"Aggregates",id:"aggregates",level:3},{value:"Events",id:"events",level:3},{value:"Commands",id:"commands",level:3},{value:"Projections",id:"projections",level:3}],d={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"concepts-and-architecture"},"Concepts and Architecture"),(0,r.kt)("p",null,"This section provides a detailed overview of the fundamental concepts and architectural design of Thalo, helping you understand how the different components work together to provide a robust event sourcing platform."),(0,r.kt)("h2",{id:"understanding-event-sourcing"},"Understanding Event Sourcing"),(0,r.kt)("p",null,"Event sourcing is a design pattern where changes to the application state are stored as a series of events, rather than just the final state. This approach offers several advantages:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Complete State History:")," Every change to the state is recorded, enabling full traceability and providing an audit trail."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Replayability:")," It's possible to revert to any previous state or project different state scenarios by replaying events."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Scalability and Performance:")," By decoupling data commands from state updates, event sourcing can lead to more scalable and performant systems.")),(0,r.kt)("h2",{id:"overview-of-wasmtime-and-sled"},"Overview of Wasmtime and Sled"),(0,r.kt)("h3",{id:"wasmtime"},"Wasmtime"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://wasmtime.dev/"},"Wasmtime")," is a standalone runtime for WebAssembly (wasm) that Thalo utilizes for executing wasm-compiled aggregates. It provides:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"High-Performance Execution:")," Optimized for efficient and fast execution of wasm binaries."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Isolation:")," Ensures safe execution of code, keeping the runtime environment secure.")),(0,r.kt)("h3",{id:"sled"},"Sled"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://sled.rs/"},"Sled")," is an embedded database used by Thalo as an event store. Key features include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Lightweight and Fast:")," Designed for high-throughput and low-latency operations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Reliability:")," Offers robust data persistence and recovery mechanisms.")),(0,r.kt)("h2",{id:"thalos-architecture"},"Thalo's Architecture"),(0,r.kt)("p",null,"Thalo's architecture is designed to harness the power of event sourcing, wasm, and an embedded database. It consists of:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Wasmtime Integration:")," For running wasm-compiled aggregates."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Sled Event Store:")," Acts as the storage backend for events."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Runtime Environment:")," Manages the execution of aggregates and handling of events.")),(0,r.kt)("h2",{id:"core-concepts"},"Core Concepts"),(0,r.kt)("h3",{id:"aggregates"},"Aggregates"),(0,r.kt)("p",null,"Aggregates are the core building blocks in Thalo. They encapsulate a group of related objects into a single unit for data modification. Each aggregate:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Handles Commands:")," To perform actions or make changes."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Generates Events:")," To represent state changes.")),(0,r.kt)("h3",{id:"events"},"Events"),(0,r.kt)("p",null,"Events are immutable records of state changes. They are stored chronologically and used to rebuild the state of an aggregate."),(0,r.kt)("h3",{id:"commands"},"Commands"),(0,r.kt)("p",null,"Commands are instructions that tell an aggregate what operation to perform. They are processed by aggregates, resulting in the generation of events."),(0,r.kt)("h3",{id:"projections"},"Projections"),(0,r.kt)("p",null,"Projections are derived states created by processing a series of events. They provide a view of the system's state for various purposes like queries or external integrations."))}u.isMDXComponent=!0}}]);