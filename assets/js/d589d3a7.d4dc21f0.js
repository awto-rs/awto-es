"use strict";(self.webpackChunkthalo_docs=self.webpackChunkthalo_docs||[]).push([[162],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var g=n.createContext({}),s=function(e){var t=n.useContext(g),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(g.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,g=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(a),d=r,m=c["".concat(g,".").concat(d)]||c[d]||p[d]||i;return a?n.createElement(m,o(o({ref:t},u),{},{components:a})):n.createElement(m,o({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var g in t)hasOwnProperty.call(t,g)&&(l[g]=t[g]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},9390:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const i={sidebar_position:2},o="Getting Started",l={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"This guide will walk you through the initial setup and basic usage of Thalo, ensuring you have everything needed to start building with this powerful event sourcing runtime.",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/thalo/docs/getting-started",draft:!1,editUrl:"https://github.com/thalo-rs/thalo-docs/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/thalo/docs/intro"},next:{title:"Concepts and Architecture",permalink:"/thalo/docs/concepts-and-architecture"}},g={},s=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Installation",id:"installation",level:2},{value:"Thalo CLI",id:"thalo-cli",level:3},{value:"Thalo Runtime",id:"thalo-runtime",level:3},{value:"Starting Thalo",id:"starting-thalo",level:2},{value:"Creating Your First Aggregate",id:"creating-your-first-aggregate",level:2},{value:"Testing Your Aggregate",id:"testing-your-aggregate",level:2}],u={toc:s};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started"},"Getting Started"),(0,r.kt)("p",null,"This guide will walk you through the initial setup and basic usage of Thalo, ensuring you have everything needed to start building with this powerful event sourcing runtime."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"Before you begin, make sure you have the following prerequisites installed:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Rust:")," Thalo requires the latest stable version of Rust. If you haven't installed Rust yet, you can do so by following the instructions on the ",(0,r.kt)("a",{parentName:"li",href:"https://www.rust-lang.org/tools/install"},"official Rust website"),".")),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("h3",{id:"thalo-cli"},"Thalo CLI"),(0,r.kt)("p",null,"The Thalo CLI is a vital tool for building and managing your wasm aggregates. Install it using Cargo:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo install thalo_cli\n")),(0,r.kt)("h3",{id:"thalo-runtime"},"Thalo Runtime"),(0,r.kt)("p",null,"Thalo Runtime is necessary for running the Thalo environment. Install it with the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"cargo install thalo_runtime\n")),(0,r.kt)("h2",{id:"starting-thalo"},"Starting Thalo"),(0,r.kt)("p",null,"Once you have installed the necessary components, you can start the Thalo runtime with the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"thalo-runtime\n")),(0,r.kt)("h2",{id:"creating-your-first-aggregate"},"Creating Your First Aggregate"),(0,r.kt)("p",null,"An aggregate in Thalo is a Rust crate that implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"thalo::Aggregate")," trait, and is exported with the ",(0,r.kt)("inlineCode",{parentName:"p"},"thalo::export_aggregate!")," macro.\nHere's a basic example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"use thalo::{Aggregate, Command, Event};\n\nthalo::export_aggregate!(MyAggregate);\n\nstruct MyAggregate { /* fields */ }\nimpl Aggregate for MyAggregate {\n    type Command = MyAggregateCommand;\n    type Event = MyAggregateEvent;\n\n    // ...\n}\n\n#[derive(Command, Deserialize)]\nenum MyAggregateCommand { /* commands */ }\n\n#[derive(Event, Serialize, Deserialize)]\nenum MyAggregateEvent { /* events */ }\n")),(0,r.kt)("p",null,"Compile your aggregate with the Thalo CLI:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"thalo build my_aggregate -o ./modules\n")),(0,r.kt)("p",null,"This assumes your aggregate crate name is ",(0,r.kt)("inlineCode",{parentName:"p"},"my_aggregate"),", and will generate a my_aggregate.wasm file in a ",(0,r.kt)("inlineCode",{parentName:"p"},"./modules")," directory.\nThalo automatically loads all wasm aggregate in the ",(0,r.kt)("inlineCode",{parentName:"p"},"./modules")," directory by default."),(0,r.kt)("h2",{id:"testing-your-aggregate"},"Testing Your Aggregate"),(0,r.kt)("p",null,"After compiling and loading your aggregate, test it with the ",(0,r.kt)("inlineCode",{parentName:"p"},"thalo execute")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"thalo execute my_aggregate <aggregate_id> <command> <command_data>\n")),(0,r.kt)("p",null,"Replace ",(0,r.kt)("inlineCode",{parentName:"p"},"<aggregate_id>"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"<command>"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"<command_data>")," with appropriate values for your aggregate."))}c.isMDXComponent=!0}}]);